---
# first to minimize the number of log entries in a different time zone
- name: timezone set to {{ timezone }}
  timezone: name={{ timezone }}

- name: update the package list
  apt:
    update_cache: yes
    cache_valid_time: "{{ pkg_cache_life }}"

# upgrade yes/safe will not remove or install new pkgs, just
# get the latest versions of everything.
- name: upgrade a server with apt
  apt: upgrade=dist

- name: common groups present
  group: name="{{ item }}" state=present
  with_items:
    - users
    - wheel

- name: wheel group allowed to sudo
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) ALL'
    validate: 'visudo -cf %s'

- name: deploy account with wheel group present
  user:
    name: "{{ deploy_acct }}"
    group: "{{ deploy_acct_group }}"
    groups: wheel
    append: yes
    shell: /bin/bash
    state: present
    password: "{{ deploy_acct_pwhash }}"

- name: accounts have authorized keys
  authorized_key:
    user: "{{ deploy_acct }}"
    key: "{{ lookup('file', deploy_acct_sshpub) }}"

- name: ssh password authentication disabled
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^#?PasswordAuthentication"
    line: 'PasswordAuthentication no'
    insertafter: EOF
    state: present

- name: Check for local host key backup
  become: False
  delegate_to: localhost
  stat: path="{{ snapshot_dir }}/ssh_host_keys.tgz"
  register: ssh_host_key_backup

- name: restore local host key backup
  unarchive:
    src: "{{ snapshot_dir }}/ssh_host_keys.tgz"
    dest: /etc/ssh
    owner: root
    group: root
  when: ssh_host_key_backup.stat.exists
  notify:
    - reload ssh
    - flush local known_hosts
    
- name: modern host key enabled
  lineinfile:
    path: /etc/ssh/sshd_config
    # match commented or uncommented
    regexp: "^#?HostKey {{ item }}"
    line: "HostKey {{ item }}"
    insertafter: EOF
    state: present
  with_items:
    - /etc/ssh/ssh_host_ed25519_key
  notify:
    - reload ssh
    - flush local known_hosts

- name: outdated host key disabled
  replace:
    path: /etc/ssh/sshd_config
    regexp: "^HostKey {{ item }}"
    replace: "#HostKey {{ item }}"
  with_items:
    - /etc/ssh/ssh_host_rsa_key
    - /etc/ssh/ssh_host_dsa_key
    - /etc/ssh/ssh_host_ecdsa_key
  notify:
    - reload ssh
    - flush local known_hosts

# In the ssh config, you remove algorithms from the default sets by
# starting the list with a dash.  Use a + to append to the defaults.
- name: weak key exchange algorithm disabled
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^KexAlgorithms"
    line: "KexAlgorithms -{{ ssh_weak_kexs | join(',') }}"
    insertafter: EOF
    state: present
  when: ssh_weak_kexs is defined
  notify:
    - reload ssh

- name: weak message authentication code disabled
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^MACs"
    line: "MACs -{{ ssh_weak_macs | join(',') }}"
    insertafter: EOF
    state: present
  when: ssh_weak_macs is defined
  notify:
    - reload ssh

- name: weak cipher disabled
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^Ciphers"
    line: "Ciphers -{{ ssh_weak_ciphers | join(',') }}"
    insertafter: EOF
    state: present
  when: ssh_weak_ciphers is defined
  notify:
    - reload ssh

- name: modern host key generated
  command: ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ""
  args:
    creates: /etc/ssh/ssh_host_ed25519_key
  notify:
    - reload ssh
    - flush local known_hosts

- name: outdated host keys removed
  file: path={{ item }} state=absent
  with_items:
    - /etc/ssh/ssh_host_dsa_key
    - /etc/ssh/ssh_host_dsa_key.pub
    - /etc/ssh/ssh_host_ecdsa_key
    - /etc/ssh/ssh_host_ecdsa_key.pub
    - /etc/ssh/ssh_host_rsa_key
    - /etc/ssh/ssh_host_rsa_key.pub

# Just make sure, RPis do not enable by default.
- name: ssh enabled at boot
  service: name=ssh enabled=yes

# add line Admin-Email: {{admin_email}} to /etc/debconf.conf
# lineinfile for /etc/nssswitch.conf
#sudoers:        files
